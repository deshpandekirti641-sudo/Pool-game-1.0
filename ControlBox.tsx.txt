'use client'

import { useState, useEffect } from 'react'

export function ControlBox(): JSX.Element {
  const [isVisible, setIsVisible] = useState(true)
  const [isMinimized, setIsMinimized] = useState(false)
  const [isMobile, setIsMobile] = useState(false)

  useEffect(() => {
    const checkMobile = () => {
      setIsMobile(window.innerWidth < 768)
    }
    
    checkMobile()
    window.addEventListener('resize', checkMobile)
    
    // Auto-fade after 5 seconds
    const timer = setTimeout(() => {
      setIsVisible(false)
    }, 5000)

    return () => {
      window.removeEventListener('resize', checkMobile)
      clearTimeout(timer)
    }
  }, [])

  const position = 'top-4 left-4'

  if (!isVisible && !isMinimized) {
    return (
      <button
        onClick={() => setIsVisible(true)}
        className={`fixed ${position} bg-gray-800 bg-opacity-60 text-white px-2 py-1 rounded text-xs hover:bg-opacity-80 transition-all z-50`}
      >
        Controls
      </button>
    )
  }

  return (
    <div className={`fixed ${position} z-50 select-none`}>
      <div className="bg-gray-800 bg-opacity-90 text-white rounded-lg border border-gray-600 shadow-lg">
        <div className="flex items-center justify-between p-2 border-b border-gray-600">
          <h3 className="text-sm font-bold">Controls</h3>
          <div className="flex gap-1">
            <button
              onClick={() => setIsMinimized(!isMinimized)}
              className="w-5 h-5 rounded bg-yellow-500 hover:bg-yellow-600 transition-colors text-xs flex items-center justify-center text-black font-bold"
            >
              {isMinimized ? '+' : '−'}
            </button>
            <button
              onClick={() => setIsVisible(false)}
              className="w-5 h-5 rounded bg-red-500 hover:bg-red-600 transition-colors text-xs flex items-center justify-center text-white font-bold"
            >
              ×
            </button>
          </div>
        </div>
        
        {!isMinimized && (
          <div className="p-3 space-y-2 text-xs">
            {isMobile ? (
              <>
                <div className="font-semibold text-green-400">Mobile Controls:</div>
                <div>• <span className="text-blue-300">Left joystick:</span> Aim cue stick</div>
                <div>• <span className="text-blue-300">Right slider:</span> Adjust power</div>
                <div>• <span className="text-blue-300">SHOOT button:</span> Take shot</div>
                <div>• <span className="text-blue-300">Pinch/Zoom:</span> Camera zoom</div>
                <div>• <span className="text-blue-300">Drag:</span> Rotate camera</div>
              </>
            ) : (
              <>
                <div className="font-semibold text-green-400">Desktop Controls:</div>
                <div>• <span className="text-blue-300">Mouse:</span> Aim cue stick</div>
                <div>• <span className="text-blue-300">Hold & drag:</span> Adjust power</div>
                <div>• <span className="text-blue-300">Click cue:</span> Shoot ball</div>
                <div>• <span className="text-blue-300">Mouse wheel:</span> Zoom camera</div>
                <div>• <span className="text-blue-300">Right click + drag:</span> Rotate camera</div>
              </>
            )}
            
            <div className="border-t border-gray-600 pt-2 mt-3">
              <div className="font-semibold text-yellow-400">Game Rules:</div>
              <div>• Pocket your group (solids/stripes)</div>
              <div>• Sink the 8-ball last to win</div>
              <div>• Avoid sinking the cue ball</div>
            </div>
          </div>
        )}
      </div>
    </div>
  )
}